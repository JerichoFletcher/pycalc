name: Checks

on:
  push:
    branches:
    - master
    - "feat-**"

env:
  PYTHON_VERSION: ["3.8", "3.9", "3.10"]

jobs:
  prep:
    name: Prepare and cache dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ env.PYTHON_VERSION }}
    outputs:
      python-key: ${{ steps.generate-python-key.outputs.key }}
      pre-commit-key: ${{ steps.generate-pre-commit-key.outputs.key }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Python environment
      id: cache-env
      uses: actions/cache@v3
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
    - name: Install dependencies
      if: steps.cache-env.outputs.cache-hit != 'true'
      run: |
        pip install --upgrade --upgrade-strategy eager -r requirements.txt -e .

  lint:
    name: Lint Python code
    runs-on: ubuntu-latest
    needs: prep
    strategy:
      matrix:
        python-version: ${{ env.PYTHON_VERSION }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Restore Python environment
      uses: actions/cache@v3
      with:
        fail-on-cache-miss: true
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
    - name: Run pylint
      run: |
        pylint --disable=import-error,too-few-public-methods $(git ls-files '*.py')

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: prep
    strategy:
      matrix:
        python-version: ${{ env.PYTHON_VERSION }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Restore Python environment
      uses: actions/cache@v3
      with:
        fail-on-cache-miss: true
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
    - name: Run pytest
      run: |
        python -m pytest

