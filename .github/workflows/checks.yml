name: Checks

on:
  push:
    branches:
      - 'master'
      - 'feat-**'
    tags:
      - 'v*'

env:
  PYTHON_VERSION: '3.9'

jobs:
  prep:
    name: Prepare and cache dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Cache Python environment
        id: cache-env
        uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        if: steps.cache-env.outputs.cache-hit != 'true'
        run: |
          pip install --upgrade --upgrade-strategy eager -r requirements.txt -e .

  lint:
    name: Lint Python code
    runs-on: ubuntu-latest
    needs: prep
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Restore Python environment
        uses: actions/cache@v3
        with:
          fail-on-cache-miss: true
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
      - name: Run pylint
        run: |
          python -m pip install pylint
          pylint --disable=import-error,too-few-public-methods $(git ls-files '*.py')

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: prep
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Restore Python environment
        uses: actions/cache@v3
        with:
          fail-on-cache-miss: true
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
      - name: Run pytest
        run: |
          python -m pip install pytest
          python -m pytest

  release:
    name: Build and release
    runs-on: ubuntu-latest
    needs: [lint, test]
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Restore Python environment
        uses: actions/cache@v3
        with:
          fail-on-cache-miss: true
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
      - name: Build project
        run: |
          python -m pip install pyinstaller
          pyinstaller --workpath ./bin/build --distpath ./bin/dist --specpath ./bin --name pycalc ./src/main.py
      - name: Compress files
        run: zip -jr pycalc.zip ./bin/dist
      - name: Upload release artifact
        uses: softprops/action-gh-release@v1
        with:
          files: pycalc.zip
